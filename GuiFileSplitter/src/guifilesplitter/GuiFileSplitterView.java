
package guifilesplitter;

import org.jdesktop.application.Action;
import java.io.*;
import java.util.zip.*;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import java.io.FileOutputStream;
import java.io.FileInputStream;
import java.util.StringTokenizer;
import java.io.IOException;
import java.io.FileNotFoundException;
import java.io.File;

/**
 * The application's main frame.
 */
public class GuiFileSplitterView extends FrameView {
    private byte option;
    private int siz = 4096;
    private String filename = "";
    private File zipfil;
    public GuiFileSplitterView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
            //    statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
              //  statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        //statusAnimationLabel.setIcon(idleIcon);
        //progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
          //              statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
            //        progressBar.setVisible(true);
              //      progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                //    statusAnimationLabel.setIcon(idleIcon);
                  //  progressBar.setVisible(false);
                  //  progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    //statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    //progressBar.setVisible(true);
                    //progressBar.setIndeterminate(false);
                    //progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = GuiFileSplitterApp.getApplication().getMainFrame();
            aboutBox = new GuiFileSplitterAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }

        GuiFileSplitterApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        splitRadioButton = new javax.swing.JRadioButton();
        mergeRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        path = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        floppyRadioButton = new javax.swing.JRadioButton();
        cdRadioButton = new javax.swing.JRadioButton();
        size = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        load_Button = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        setsizeButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        heading = new javax.swing.JLabel();
        prog = new javax.swing.JProgressBar();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        loadMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        actionMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        zipFileChooser = new javax.swing.JFileChooser();
        splitFileChooser = new javax.swing.JFileChooser();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        outChosser = new javax.swing.JFileChooser();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(guifilesplitter.GuiFileSplitterApp.class).getContext().getResourceMap(GuiFileSplitterView.class);
        jTabbedPane1.setToolTipText(resourceMap.getString("jTabbedPane1.toolTipText")); // NOI18N
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        buttonGroup1.add(splitRadioButton);
        splitRadioButton.setText(resourceMap.getString("splitRadioButton.text")); // NOI18N
        splitRadioButton.setToolTipText(resourceMap.getString("splitRadioButton.toolTipText")); // NOI18N
        splitRadioButton.setName("splitRadioButton"); // NOI18N
        splitRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                splitRadioButtonStateChanged(evt);
            }
        });
        splitRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                splitRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(mergeRadioButton);
        mergeRadioButton.setText(resourceMap.getString("mergeRadioButton.text")); // NOI18N
        mergeRadioButton.setToolTipText(resourceMap.getString("mergeRadioButton.toolTipText")); // NOI18N
        mergeRadioButton.setName("mergeRadioButton"); // NOI18N
        mergeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeRadioButtonActionPerformed(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        path.setName("path"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        buttonGroup2.add(floppyRadioButton);
        floppyRadioButton.setText(resourceMap.getString("floppyRadioButton.text")); // NOI18N
        floppyRadioButton.setIcon(resourceMap.getIcon("floppyRadioButton.icon")); // NOI18N
        floppyRadioButton.setName("floppyRadioButton"); // NOI18N
        floppyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                floppyRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(cdRadioButton);
        cdRadioButton.setText(resourceMap.getString("cdRadioButton.text")); // NOI18N
        cdRadioButton.setIcon(resourceMap.getIcon("cdRadioButton.icon")); // NOI18N
        cdRadioButton.setName("cdRadioButton"); // NOI18N
        cdRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdRadioButtonActionPerformed(evt);
            }
        });

        size.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        size.setName("size"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        load_Button.setText(resourceMap.getString("load_Button.text")); // NOI18N
        load_Button.setName("load_Button"); // NOI18N
        load_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                load_ButtonActionPerformed(evt);
            }
        });

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        setsizeButton.setText(resourceMap.getString("setsizeButton.text")); // NOI18N
        setsizeButton.setName("setsizeButton"); // NOI18N
        setsizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setsizeButtonActionPerformed(evt);
            }
        });

        resetButton.setText(resourceMap.getString("resetButton.text")); // NOI18N
        resetButton.setName("resetButton"); // NOI18N
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        heading.setText(resourceMap.getString("heading.text")); // NOI18N
        heading.setName("heading"); // NOI18N

        prog.setName("prog"); // NOI18N

        jLabel8.setForeground(resourceMap.getColor("jLabel8.foreground")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(splitRadioButton)
                        .addGap(74, 74, 74)
                        .addComponent(mergeRadioButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(71, 71, 71)
                        .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(load_Button)))
                .addContainerGap(166, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(setsizeButton)
                .addContainerGap(278, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(369, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(floppyRadioButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(heading, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(resetButton)
                        .addGap(206, 206, 206))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(cdRadioButton)))
                .addGap(285, 285, 285))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(349, 349, 349)
                .addComponent(prog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(400, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(splitRadioButton)
                    .addComponent(mergeRadioButton))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(load_Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(floppyRadioButton)
                    .addComponent(cdRadioButton))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setsizeButton)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addComponent(prog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetButton)
                            .addComponent(jButton2))
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(heading, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), resourceMap.getIcon("jPanel1.TabConstraints.tabIcon"), jPanel1, resourceMap.getString("jPanel1.TabConstraints.tabToolTip")); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        buttonGroup3.add(jRadioButton7);
        jRadioButton7.setText(resourceMap.getString("jRadioButton7.text")); // NOI18N
        jRadioButton7.setToolTipText(resourceMap.getString("jRadioButton7.toolTipText")); // NOI18N
        jRadioButton7.setIcon(resourceMap.getIcon("jRadioButton7.icon")); // NOI18N
        jRadioButton7.setName("jRadioButton7"); // NOI18N
        jRadioButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton7ActionPerformed(evt);
            }
        });

        buttonGroup3.add(jRadioButton6);
        jRadioButton6.setText(resourceMap.getString("jRadioButton6.text")); // NOI18N
        jRadioButton6.setToolTipText(resourceMap.getString("jRadioButton6.toolTipText")); // NOI18N
        jRadioButton6.setIcon(resourceMap.getIcon("jRadioButton6.icon")); // NOI18N
        jRadioButton6.setName("jRadioButton6"); // NOI18N
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        jLabel7.setForeground(resourceMap.getColor("jLabel7.foreground")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jRadioButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton6)
                    .addComponent(jRadioButton7))
                .addGap(26, 26, 26))
        );

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jTextField1.setName("jTextField1"); // NOI18N

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        jTextField2.setText(resourceMap.getString("jTextField2.text")); // NOI18N
        jTextField2.setToolTipText(resourceMap.getString("jTextField2.toolTipText")); // NOI18N
        jTextField2.setName("jTextField2"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLabel4))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jLabel5)))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(308, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(97, 97, 97)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(313, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), resourceMap.getIcon("jPanel2.TabConstraints.tabIcon"), jPanel2, resourceMap.getString("jPanel2.TabConstraints.tabToolTip")); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        loadMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        loadMenuItem.setText(resourceMap.getString("loadMenuItem.text")); // NOI18N
        loadMenuItem.setName("loadMenuItem"); // NOI18N
        loadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(loadMenuItem);

        jSeparator2.setName("jSeparator2"); // NOI18N
        fileMenu.add(jSeparator2);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(guifilesplitter.GuiFileSplitterApp.class).getContext().getActionMap(GuiFileSplitterView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        actionMenu.setText(resourceMap.getString("actionMenu.text")); // NOI18N
        actionMenu.setName("actionMenu"); // NOI18N

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        actionMenu.add(jMenuItem1);

        jMenuItem2.setText(resourceMap.getString("jMenuItem2.text")); // NOI18N
        jMenuItem2.setName("jMenuItem2"); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        actionMenu.add(jMenuItem2);

        menuBar.add(actionMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem3.setText(resourceMap.getString("jMenuItem3.text")); // NOI18N
        jMenuItem3.setName("jMenuItem3"); // NOI18N
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        helpMenu.add(jMenuItem3);

        jSeparator1.setName("jSeparator1"); // NOI18N
        helpMenu.add(jSeparator1);

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        zipFileChooser.setDialogTitle(resourceMap.getString("zipFileChooser.dialogTitle")); // NOI18N
        zipFileChooser.setName("zipFileChooser"); // NOI18N

        splitFileChooser.setDialogTitle(resourceMap.getString("splitFileChooser.dialogTitle")); // NOI18N
        splitFileChooser.setName("splitFileChooser"); // NOI18N

        outChosser.setName("outChosser"); // NOI18N

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents
    private void merge() throws FileNotFoundException, WrongFileTypeException, CoruptFileException{
     String filename;
        int m_size = 1024;
        int max_count = 1;
        prog.setStringPainted(true);

        try
        {
            FileInputStream fin = new FileInputStream(this.filename);
            if (!this.filename.substring(this.filename.length()-3).equals("spt"))
                throw new WrongFileTypeException("Incorrect input file. File must be a \".spt\" file.");

            byte[] header = new byte[Cell.HEADER_SIZE];
            int read = fin.read(header);
            String head = new String(header);
            System.err.println(head);
            StringTokenizer st = new StringTokenizer(head,"\n");

            if (!st.hasMoreTokens())
                throw new CoruptFileException("Internal Error : File Header corrupt");
            filename = st.nextToken();
            if (!st.hasMoreTokens())
                throw new CoruptFileException("Internal Error : File Header corrupt");
            m_size = Integer.parseInt(st.nextToken());
            if (!st.hasMoreTokens())
                throw new CoruptFileException("Internal Error : File Header corrupt");
            int count = Integer.parseInt(st.nextToken());
            if ((filename.substring(filename.length()-4) == ".spt") || st.hasMoreTokens()){
                if (!st.hasMoreTokens())
                    throw new CoruptFileException("Internal Error : File Header corrupt");
                max_count = Integer.parseInt(st.nextToken());
            }
            if (count != max_count)
                throw new NumberFormatException();
        }
        catch (NumberFormatException e)
        {
            throw new CoruptFileException("Input file corrupted. Sorry");
        }
        catch (IOException e)
        {
            throw new CoruptFileException("Input file corrupted. Sorry");
        }

        File f = new File(this.filename);
        final String path = f.getParent() + File.separatorChar;
        final int max = max_count;
        final String fname = filename;
        final int size = m_size;

        Runnable bgRun = new Runnable(){
            public void run(){
                heading.setText("Merging Files ...");
                try{
                    Cell packet;
                    File file = new File(path + fname);
                    if (file.exists())
                        file = new File(path + fname.substring(0,fname.length()-4) + "(2)."+fname.substring(fname.length()-3));


                    //FileWriter k = new FileWriter(file);
                    FileOutputStream fout = new FileOutputStream(file);
                    for (int counter = 0; counter <= max; counter++)
                    {
                        packet = new Cell(getFileName(counter == max,counter,fname),size,counter);
                        packet.readData();
                        if (!packet.getFileName().equals(fname))
                            throw new CoruptFileException("Input file corrupted - Mismatched filenames");
                        if (packet.getCounter() != counter)
                            throw new CoruptFileException("Input file corupted - Mismatched counter");
                        fout.write(packet.getData());
                        prog.setValue(counter*100/max);
                        Thread.yield();
                    }
                    fout.close();

                    heading.setText("Merging Complete");
                    Alert oops = new Alert(new javax.swing.JFrame(), true);
                    oops.setMessage("Done");
                    oops.show();
                }
                catch (CoruptFileException e)
                {
                   heading.setText("Error Encountered");
                    Alert oops = new Alert(new javax.swing.JFrame(), true);
                    oops.setMessage(e.getMessage());
                    oops.show();
                }
                catch (java.io.IOException e)
                {
                    //heading.setText("Error Encountered");
                    Alert oops = new Alert(new javax.swing.JFrame(), true);
                    oops.setMessage(e.getMessage());
                    oops.show();
                }
                finally{
                     heading.setText("Ready");
                   prog.setValue(0);
                    jButton2.setEnabled(true);
                    load_Button.setEnabled(true);
                    setsizeButton.setEnabled(true);
                    loadMenuItem.setEnabled(true);
                }
            }
        };
        Thread t = new Thread(bgRun);
        t.start();
        jButton2.setEnabled(false);
        load_Button.setEnabled(false);
        setsizeButton.setEnabled(false);
        loadMenuItem.setEnabled(false);

 }

    private void split()  {
        final String filename = this.filename;
        final int siz = this.siz;
        Runnable bgRun = new Runnable(){
            public void run(){
                int counter = 0;
                try{
                    Cell cell;
                    File file = new File(filename);
                    if (file.length() / siz > Integer.MAX_VALUE)
                        throw new IOException("Too many resulting cells");

                    int max = (int) (file.length() / siz);
                    max++;
                    heading.setText("Splitting into approximately "+max+" cells");

                    FileInputStream in = new FileInputStream(file);
                    int last = 0;
                    byte[] k = new byte[siz];
                    byte[] l;

                    do
                    {
                        last = in.read(k,0,siz);
                        cell = new Cell(filename,siz, counter++);
                        l = new byte[last];
                        System.arraycopy(k,0,l,0,last);
                        if (last == -1)
                            cell.addData(l, true);
                        else
                            cell.addData(l,false);
                        cell.writeData();
                        prog.setValue(counter*100/max);
                        Thread.yield();
                    }while ((last != -1) && (last >= siz - 1));
                    heading.setText("Splitting Complete ("+counter+"cells)");
                    Alert oops = new Alert(new javax.swing.JFrame(), true);
                    oops.setMessage("Done");
                    oops.show();
                }
                catch (java.io.FileNotFoundException e)
                {
                    heading.setText("Error Encountered");
                    Alert oops = new Alert(new javax.swing.JFrame(), true);
                    oops.setMessage(e.getMessage());
                    oops.show();
                }
                catch (java.io.IOException e)
                {
                    heading.setText("Error Encountered");
                    Alert oops = new Alert(new javax.swing.JFrame(), true);
                    oops.setMessage(e.getMessage());
                    oops.show();
                }
                finally{
                    heading.setText("Ready");
                    prog.setValue(0);
                    jLabel8.setText("");
                    jButton2.setEnabled(true);
                    load_Button.setEnabled(true);
                    setsizeButton.setEnabled(true);
                    loadMenuItem.setEnabled(true);
                }
        }
        };
        Thread t = new Thread(bgRun);
        t.start();
        jButton2.setEnabled(false);
        load_Button.setEnabled(false);
        setsizeButton.setEnabled(false);
        loadMenuItem.setEnabled(false);
  }

    private String getFileName(boolean last, int counter, String filename){
        File f = new File(this.filename);
        filename = f.getParent() + File.separatorChar + filename;
        int lastIndex = filename.lastIndexOf(".");
        if (lastIndex == 0)
            lastIndex = -1;
        String suffix = ".sxx";
        if (last)
            suffix = ".spt";

        if (lastIndex != -1)
            filename = this.filename.substring(0,lastIndex) +"_" + counter + suffix;
        else
            filename = this.filename + counter +suffix;
        return filename;
    }

    private void zipFolder(String srcFolder, String destZipFile) throws Exception {
    ZipOutputStream zip = null;
    FileOutputStream fileWriter = null;

    fileWriter = new FileOutputStream(destZipFile);
    zip = new ZipOutputStream(fileWriter);

    addFolderToZip("", srcFolder, zip);
    zip.flush();
    zip.close();
  }

    private  void addFolderToZip(String path, String srcFolder, ZipOutputStream zip) throws Exception {
    File folder = new File(srcFolder);

    for (String fileName : folder.list()) {
      if (path.equals("")) {
        addFileToZip(folder.getName(), srcFolder + "/" + fileName, zip);
      } else {
        addFileToZip(path + "/" + folder.getName(), srcFolder + "/" + fileName, zip);
      }
    }
  }


    private void addFileToZip(String path, String srcFile, ZipOutputStream zip) throws Exception {

    File folder = new File(srcFile);
    if (folder.isDirectory()) {
      addFolderToZip(path, srcFile, zip);
    }
    else {
      byte[] buf = new byte[1024];
      int len;
      FileInputStream in = new FileInputStream(srcFile);
      jTextArea1.append("Adding file:  "+folder.getName()+"\n");
      zip.putNextEntry(new ZipEntry(path + "/" + folder.getName()));
      while ((len = in.read(buf)) > 0) {
        zip.write(buf, 0, len);
      }
    }
  }
    

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        zipFileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int returnVal = zipFileChooser.showOpenDialog(this.getFrame());
        if(zipFileChooser.getSelectedFile().isFile()==true)
        {
            if(returnVal == JFileChooser.APPROVE_OPTION){
               String fname=zipFileChooser.getSelectedFile().getParent();
               zipfil=zipFileChooser.getSelectedFile();
              //// jTextField2.getText();
               jTextField1.setText(fname);
          }
        }
        else if(zipFileChooser.getSelectedFile().isDirectory()==true){
            if(returnVal == JFileChooser.APPROVE_OPTION){
               String fname=zipFileChooser.getSelectedFile().getAbsolutePath();
               zipfil=zipFileChooser.getSelectedFile();
              //// jTextField2.getText();
               jTextField1.setText(fname);
          }
       }

      // TODO add your handling code here:
}//GEN-LAST:event_jButton3ActionPerformed

    private void load_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_ButtonActionPerformed
       if(option==1){
           splitFileChooser.setDialogTitle("Please choose file to split..");
           
       }
       else if(option==2){
           splitFileChooser.setDialogTitle("please choose file to merge..");
           splitFileChooser.setFileFilter(new SptFilter());
       }
       else{
           //int returnVal = splitFileChooser.showOpenDialog(this.getFrame());
           splitFileChooser.setDialogTitle("Open");
        }
       int returnVal = splitFileChooser.showOpenDialog(this.getFrame());
       splitFileChooser.setMultiSelectionEnabled(false);
       if(returnVal == JFileChooser.APPROVE_OPTION){
               String fname=splitFileChooser.getSelectedFile().getAbsolutePath();
               File f=splitFileChooser.getSelectedFile();
               path.setText(fname);
               this.filename=fname;
               jLabel8.setText("Size of Selected File : "+f.length()/1024+" KiloBytes");
               path.setEnabled(false);
        }
       // TODO add your handling code here:
}//GEN-LAST:event_load_ButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if(option==0){
            Alert oops = new Alert(new javax.swing.JFrame(), true);
            oops.setMessage("Please select anyone of operation to perform...");
            oops.show();
        }
        if(size.getText()==""){
            Alert oops = new Alert(new javax.swing.JFrame(), true);
            oops.setMessage("Please specify size block");
            oops.show();
        }
        if (filename == "")
        {
            Alert oops = new Alert(new javax.swing.JFrame(), true);
            oops.setMessage("Please put in a filename!");
            oops.show();
        }
        else if (option == 2)
        {
            try{
                merge();
            }
            catch (FileNotFoundException e)
            {
                Alert oops = new Alert(new javax.swing.JFrame(), true);
                oops.setMessage(e.getMessage());
                oops.show();
            }
            catch (WrongFileTypeException e)
            {
                Alert oops = new Alert(new javax.swing.JFrame(), true);
                oops.setMessage(e.getMessage());
                oops.show();
            }
            catch (CoruptFileException e)
            {
                Alert oops = new Alert(new javax.swing.JFrame(), true);
                oops.setMessage(e.getMessage());
                oops.show();
            }
        }
        else if (option == 1)
        {
            try
            {
            this.siz=Integer.parseInt(size.getText())*1024;
            File f=new File(this.filename);
            if(this.siz>f.length()){
                heading.setText(""+this.siz+"   "+f.length());
                throw new Exception();
            }

            split();
            }
            catch(Exception e){
            Alert oops = new Alert(new javax.swing.JFrame(), true);
            oops.setMessage("Please put in a proper block size..!");
            oops.setVisible(true);
            size.setEnabled(true);
            size.setEditable(true);
            }
        }

}//GEN-LAST:event_jButton2ActionPerformed

    private void splitRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_splitRadioButtonStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_splitRadioButtonStateChanged

    private void splitRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_splitRadioButtonActionPerformed
        option=1;
        // TODO add your handling code here:
    }//GEN-LAST:event_splitRadioButtonActionPerformed

    private void mergeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeRadioButtonActionPerformed
        option=2;
        // TODO add your handling code here:
    }//GEN-LAST:event_mergeRadioButtonActionPerformed

    private void floppyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_floppyRadioButtonActionPerformed
        size.setText("1422");
        this.siz=1422;
        size.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_floppyRadioButtonActionPerformed

    private void cdRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdRadioButtonActionPerformed
        size.setText("716800");
        this.siz=716800;
        size.setEditable(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_cdRadioButtonActionPerformed

    private void setsizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setsizeButtonActionPerformed
        try
        {
            this.siz=Integer.parseInt(size.getText());
            if(siz<=0){
                throw new NumberFormatException();
            }
        }
        catch(NumberFormatException e){
            Alert oops = new Alert(new javax.swing.JFrame(), true);
            oops.setMessage("Please enter a positive integer in the size field");
            oops.show();
            size.setEditable(true);
        }
    // TODO add your handling code here:
    }//GEN-LAST:event_setsizeButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        size.setText("");
        size.setEditable(true);
        size.setEnabled(true);
        path.setText("");
        path.setEnabled(true);
        heading.setText("");
        jLabel8.setText("");
//jRadioButton1.setSelected(false);
// TODO add your handling code here:
    }//GEN-LAST:event_resetButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(jRadioButton7.isSelected()==true){
        try{
            if(jTextField1.getText()!="" && jTextField2.getText()!=""){
            
                zipFolder(jTextField1.getText(), jTextField2.getText());
            }
            else if(jTextField1.getText()=="")
            {
                Alert oops = new Alert(new javax.swing.JFrame(), true);
                oops.setMessage("Please specify proper i/p path...");
                oops.show();
            }
            else if(jTextField2.getText()=="")
            {
                Alert oops = new Alert(new javax.swing.JFrame(), true);
                oops.setMessage("Please specify proper O/p path...");
                oops.show();
            }
        }
        catch(Exception e){}

        }
        else if(jRadioButton6.isSelected()==true){
        try{
          Utils.unpackArchive(zipfil, new File(zipfil.getParentFile(),"zip OUTPUT"));
        }
        catch(IOException e){
            Alert oops = new Alert(new javax.swing.JFrame(), true);
            oops.setMessage("error.......");
            oops.show();
        }
        }
        else{
            Alert oops = new Alert(new javax.swing.JFrame(), true);
            oops.setMessage("Please select anyone of operation to perform...");
            oops.show();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void loadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuItemActionPerformed
       if(option==1){
           splitFileChooser.setDialogTitle("Please choose file to split..");

       }
       else if(option==2){
           splitFileChooser.setDialogTitle("please choose file to merge..");
           splitFileChooser.setFileFilter(new SptFilter());
       }
       else{
           //int returnVal = splitFileChooser.showOpenDialog(this.getFrame());
           splitFileChooser.setDialogTitle("Open");
        }
       int returnVal = splitFileChooser.showOpenDialog(this.getFrame());
       splitFileChooser.setMultiSelectionEnabled(false);
       if(returnVal == JFileChooser.APPROVE_OPTION){
               String fname=splitFileChooser.getSelectedFile().getAbsolutePath();
               path.setText(fname);
               this.filename=fname;
               path.setEnabled(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_loadMenuItemActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
jTextField2.setEnabled(false);
jLabel5.setEnabled(false);
jLabel7.setText("Please select ZIP file to Unzip");// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton7ActionPerformed
        jTextField2.setEnabled(true);
jLabel5.setEnabled(true);
jTextArea1.setText("");
jLabel7.setText("Please select file or folder for creating zip");// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton7ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        option=1;
        jButton2ActionPerformed(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        option=2;
        jButton2ActionPerformed(evt);// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        String[] a=new String[1];
        GuiFileSplitterHelp.main(a);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
  outChosser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = outChosser.showOpenDialog(this.getFrame());
       outChosser.setMultiSelectionEnabled(false);
    
      if(returnVal == JFileChooser.APPROVE_OPTION){

               String fname=outChosser.getSelectedFile().getAbsolutePath();
               jTextField2.setText(fname+"\\a.zip");

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu actionMenu;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JRadioButton cdRadioButton;
    private javax.swing.JRadioButton floppyRadioButton;
    private javax.swing.JLabel heading;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JMenuItem loadMenuItem;
    private javax.swing.JButton load_Button;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JRadioButton mergeRadioButton;
    private javax.swing.JFileChooser outChosser;
    private javax.swing.JTextField path;
    private javax.swing.JProgressBar prog;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton setsizeButton;
    private javax.swing.JTextField size;
    private javax.swing.JFileChooser splitFileChooser;
    private javax.swing.JRadioButton splitRadioButton;
    private javax.swing.JFileChooser zipFileChooser;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;

}
class SptFilter extends javax.swing.filechooser.FileFilter
{

    /** Used to show only the files that are .spt type (for merging)
     * @param file Input selection in the UI
     * @return true : if file extention is .spt false otherwise
     */
    public boolean accept(java.io.File file) {
        if (file.isDirectory())
            return true;
        else if (file.getName().substring(file.getName().length() - 3).equals("spt"))
            return true;
        else
            return false;
    }

    /** Used to label the filechoser descriptor
     * @return String of the descriptor
     */
    public String getDescription() {
        return ".spt";
    }

}